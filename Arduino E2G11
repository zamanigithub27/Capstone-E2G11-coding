#define BLYNK_TEMPLATE_ID "TMPLQN4-CLao"
#define BLYNK_DEVICE_NAME "RFID"
#define BLYNK_AUTH_TOKEN "OzWetbYEAStRFW_oCBc0--BwBFlidjZy"
#define BLYNK_PRINT Serial

#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <SPI.h>
#include <MFRC522.h>
#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h>
#include <HTTPSRedirect.h>
 
#define SS_PIN 4
#define RST_PIN 3
MFRC522 mfrc522(SS_PIN, RST_PIN);   // Create MFRC522 instance.

int item_a, item_b, item_c, item_d, item_e, item_f, item_g; int check_in; String mesej; String status; String stats, barang;
const int buzzer = 16; int delay_tone=200; int delay_notone=200; int freq=1000; int scan_delay=1000;
char auth[] = BLYNK_AUTH_TOKEN;

char ssid[] = "OnePlus 8T";  // type your wifi name
char pass[] = "harithwafi00";  // type your wifi password

BlynkTimer timer;

//----------------------------------------Host & httpsPort
const char* host = "script.google.com";
const int httpsPort = 443;
//----------------------------------------
WiFiClientSecure client; //--> Create a WiFiClientSecure object.

String GAS_ID = "AKfycbxyNdKULFH6GI6Djcj62N0It1jn_mB9js715B-fM59_yIZqjcZqHAs5ihfRV-wNE6hmYQ"; //--> spreadsheet script ID

void setup()
{
  Serial.begin(9600);   // Initiate a serial communication
  SPI.begin();          // Initiate  SPI bus
  mfrc522.PCD_Init();   // Initiate MFRC522
  
  Serial.println("Put your card to the reader...");
  Serial.println();

  Blynk.begin(auth, ssid, pass);
  //timer.setInterval(2500L, sendSensor);

  pinMode(1, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(16, OUTPUT);

  WiFi.begin(ssid, pass); //--> Connect to your WiFi router
  Serial.println("");
  
  client.setInsecure();
}

BLYNK_WRITE (V0)
{
  int pinValue = param.asInt();
  check_in = pinValue;
}


void loop()
 {

  Blynk.run();
  timer.run();

  if (check_in == 1)
  {

    //stats="Check In";

    digitalWrite(3, LOW); //gpio 12 cek dekat belakang board red
    digitalWrite(1, HIGH); //green

    // Look for new cards
    if ( ! mfrc522.PICC_IsNewCardPresent()) 
    {
      return;
    }
    // Select one of the cards
    if ( ! mfrc522.PICC_ReadCardSerial()) 
    {
      return;
    }
    //Show UID on serial monitor
    Serial.print("UID tag :");
    String content= "";
    byte letter;
    for (byte i = 0; i < mfrc522.uid.size; i++) 
    {
       Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
       Serial.print(mfrc522.uid.uidByte[i], HEX);
       content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
       content.concat(String(mfrc522.uid.uidByte[i], HEX));
    }
    Serial.println();
    Serial.print("Message : ");
    content.toUpperCase();
    status = "Check In Mode";
    Blynk.virtualWrite(V9, status);

    //digitalWrite(3, LOW); //gpio 12 cek dekat belakang board red
    //digitalWrite(1, HIGH); //green

    if (content.substring(1) == "01 07 BF 1C") //change here the UID of the card/cards that you want to give access
    {
      Serial.println("Item A check in");
      item_a=item_a+1;
      mesej="Multimeter In";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V1, item_a);
      Serial.println((int)item_a);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      delay(delay_notone);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);
      noTone(buzzer);     // Stop sound...
      Serial.println();
      delay(scan_delay);

      barang="Multimeter";
      stats="CheckIn";
      sendData(barang, stats, item_a);
    }
   else if (content.substring(1) == "E0 0A 72 19") 
    {
      Serial.println("Item B check in");
      item_b=item_b+1;
      mesej="LCR M. In";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V2, item_b);
      Serial.println((int)item_b);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      delay(delay_notone);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);
      noTone(buzzer);   
      Serial.println();
      delay(scan_delay);

      barang="LCR_Meter";
      stats="CheckIn";
      sendData(barang, stats, item_b);
    }

    else if (content.substring(1) == "DA A3 E5 16") 
    {
      Serial.println("Item C check in");
      item_c=item_c+1;
      mesej="Current C. In";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V3, item_c);
      Serial.println((int)item_c);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      delay(delay_notone);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);
      noTone(buzzer);   
      Serial.println();
      delay(scan_delay);

      barang="Current_Clamp";
      stats="CheckIn";
      sendData(barang, stats, item_c);
    }

    else if (content.substring(1) == "FA 97 33 16") 
    {
      Serial.println("Item D check in");
      item_d=item_d+1;
      mesej="Galvanometer In";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V4, item_d);
      Serial.println((int)item_d);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      delay(delay_notone);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);
      noTone(buzzer);   
      Serial.println();
      delay(scan_delay);

      barang="Galvanometer";
      stats="CheckIn";
      sendData(barang, stats, item_d);
    }

    else if (content.substring(1) == "DA 87 60 16") 
    {
      Serial.println("Item E check in");
      item_e=item_e+1;
      mesej="Jumper W. In";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V5, item_e);
      Serial.println((int)item_e);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      delay(delay_notone);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);
      noTone(buzzer);   
      Serial.println();
      delay(scan_delay);

      barang="Jumper_Wire";
      stats="CheckIn";
      sendData(barang, stats, item_e);
    }

    else if (content.substring(1) == "DA 5F 1E 16") 
    {
      Serial.println("Item F check in");
      item_f=item_f+1;
      mesej="Solder In";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V6, item_f);
      Serial.println((int)item_f);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      delay(delay_notone);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);
      noTone(buzzer);   
      Serial.println();
      delay(scan_delay);

      barang="Solder";
      stats="CheckIn";
      sendData(barang, stats, item_f);
    }

    else if (content.substring(1) == "EA B4 9D 16") 
    {
      Serial.println("Item G check in");
      item_g=item_g+1;
      mesej="TestPen In";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V7, item_g);
      Serial.println((int)item_g);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      delay(delay_notone);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);
      noTone(buzzer);   
      Serial.println();
      delay(scan_delay);

      barang="TestPen";
      stats="CheckIn";
      sendData(barang, stats, item_g);
    }
  
  }
  //condition where checkout button is chosen
  
  else if (check_in == 0)
  {
    //stats="Check Out";
    digitalWrite(3, HIGH); //gpio 12 cek dekat belakang board red
    digitalWrite(1, LOW); //green
    
    // Look for new cards
    if ( ! mfrc522.PICC_IsNewCardPresent()) 
    {
      return;
    }
    // Select one of the cards
    if ( ! mfrc522.PICC_ReadCardSerial()) 
    {
      return;
    }
    //Show UID on serial monitor
    Serial.print("UID tag :");
    String content= "";
    byte letter;
    for (byte i = 0; i < mfrc522.uid.size; i++) 
    {
       Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
       Serial.print(mfrc522.uid.uidByte[i], HEX);
       content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
       content.concat(String(mfrc522.uid.uidByte[i], HEX));
    }
    Serial.println();
    Serial.print("Message : ");
    content.toUpperCase();
    status = "Checkout Mode";
    Blynk.virtualWrite(V9, status);

    //digitalWrite(3, HIGH); //gpio 12 cek dekat belakang board red
    //digitalWrite(1, LOW); //green

    if (content.substring(1) == "01 07 BF 1C") //change here the UID of the card/cards that you want to give access
    {
      Serial.println("Item A check out");
      item_a=item_a-1;
      mesej="Multimeter Out";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V1, item_a);
      Serial.println((int)item_a);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      Serial.println();
      delay(scan_delay);

      barang="Multimeter";
      stats="CheckOut";
      sendData(barang, stats, item_a);
    }
   else if (content.substring(1) == "E0 0A 72 19") 
    {
      Serial.println("Item B check out");
      item_b=item_b-1;
      mesej="LCR M. Out";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V2, item_b);
      Serial.println((int)item_b);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      Serial.println();
      delay(scan_delay);

      barang="LCR_Meter";
      stats="CheckOut";
      sendData(barang, stats, item_b);
    }

    else if (content.substring(1) == "DA A3 E5 16") 
    {
      Serial.println("Item C check out");
      item_c=item_c-1;
      mesej="Current C. Out";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V3, item_c);
      Serial.println((int)item_c);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      Serial.println();
      delay(scan_delay);

      barang="Current_Clamp";
      stats="CheckOut";
      sendData(barang, stats, item_c);
    }

    else if (content.substring(1) == "FA 97 33 16") 
    {
      Serial.println("Item D check out");
      item_d=item_d-1;
      mesej="Galvanometer Out";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V4, item_d);
      Serial.println((int)item_d);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      Serial.println();
      delay(scan_delay);

      barang="Galvanometer";
      stats="CheckOut";
      sendData(barang, stats, item_d);
    }

    else if (content.substring(1) == "DA 87 60 16") 
    {
      Serial.println("Item E check out");
      item_e=item_e-1;
      mesej="Jumper W. Out";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V5, item_e);
      Serial.println((int)item_e);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      Serial.println();
      delay(scan_delay);

      barang="Jumper_Wire";
      stats="CheckOut";
      sendData(barang, stats, item_e);
    }

    else if (content.substring(1) == "DA 5F 1E 16") 
    {
      Serial.println("Item F check out");
      item_f=item_f-1;
      mesej="Item F check out";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V6, item_f);
      Serial.println((int)item_f);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      Serial.println();
      delay(scan_delay);

      barang="Solder";
      stats="CheckOut";
      sendData(barang, stats, item_f);
    }

    else if (content.substring(1) == "EA B4 9D 16") 
    {
      Serial.println("Item G check out");
      item_g=item_g-1;
      mesej="TestPen Out";
      Blynk.virtualWrite(V8, mesej);
      Blynk.virtualWrite(V7, item_g);
      Serial.println((int)item_g);
      tone(buzzer, freq); // Send 1KHz sound signal...
      delay(delay_tone);        // ...for 1 sec
      noTone(buzzer);
      Serial.println();
      delay(scan_delay);

      barang="TestPen";
      stats="CheckOut";
      sendData(barang, stats, item_g);
    }
  }
  
}

void sendData(String item, String status, int quantity)
{
  Serial.println("==========");
  Serial.print("connecting to ");
  Serial.println(host);

  //----------------------------------------Connect to Google host
  if (!client.connect(host, httpsPort)) {
    Serial.println("connection failed");
    return;
  }
  //----------------------------------------

  //----------------------------------------Processing data and sending data
  String s_item =  String(item);
  //Serial.print(s_item);                    // String string_temperature =  String(tem, DEC); 
  String s_status =  String(status);
  String s_quantity =  String(quantity); 
  
  String url = "/macros/s/" + GAS_ID + "/exec?Item=" + s_item + "&Status=" + s_status + "&Quantity=" + s_quantity;


  Serial.print("requesting URL: ");
  Serial.println(url);

  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
         "Host: " + host + "\r\n" +
         "User-Agent: BuildFailureDetectorESP8266\r\n" +
         "Connection: close\r\n\r\n");

  Serial.println("request sent");
  //----------------------------------------

  //----------------------------------------Checking whether the data was sent successfully or not
  while (client.connected()) {
    String line = client.readStringUntil('\n');
    if (line == "\r") {
      Serial.println("headers received");
      break;
    }
  }
  String line = client.readStringUntil('\n');
  if (line.startsWith("{\"state\":\"success\"")) {
    Serial.println("esp8266/Arduino CI successfull!");
  } else {
    Serial.println("esp8266/Arduino CI has failed");
  }
  Serial.print("reply was : ");
  Serial.println(line);
  Serial.println("closing connection");
  Serial.println("==========");
  Serial.println();
  //----------------------------------------
}
